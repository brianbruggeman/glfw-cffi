[tox]
envlist = clean, py{27,py,35,36}, style
skipsdist = True
skip_missing_interpreters = True
sitepackages = False

[testenv]
passenv = *
whitelist_externals = *
install_command = {envpython} -m pip install -q --process-dependency-links {opts} {packages}
envdir = {env:WORKON_HOME}/tox-glfw/{envname}
sitepackages = False
recreate = True
deps =
    --editable=file:///{toxinidir}[tests]
    --editable=file:///{toxinidir}
    py{27,35,36,37,py}-requirements: -r{toxinidir}/requirements.txt
commands =
    # hash -r
    py{27,py,35,36,37}: {envpython} -m pytest --html=docs/reports/{envname}-report.html {posargs}
    smoke: {envpython} -m pytest -m smoke --html=docs/reports/{envname}-report.html {posargs}
    unit: {envpython} -m pytest -m unit --html=docs/reports/{envname}-report.html {posargs}
    integration: {envpython} -m pytest -m integration --long-running --html=docs/reports/{envname}-report.html {posargs}
    requirements: {envpython} -m pytest --html=docs/reports/{envname}-report.html {posargs}
    py{27,py,35,36,37}-smoke: {envpython} -m pytest -m smoke --html=docs/reports/{envname}-report.html {posargs}
    py{27,py,35,36,37}-unit: {envpython} -m pytest -m unit --html=docs/reports/{envname}-report.html {posargs}
    py{27,py,35,36,37}-integration: {envpython} -m pytest -m integration --long-running --html=docs/reports/{envname}-report.html {posargs}
    py{27,py,35,36,37}-requirements: {envpython} -m pytest --html=docs/reports/{envname}-report.html {posargs}


[testenv:clean]
whitelist_externals = *
deps = coverage
recreate = False
skip_install = true
commands =
    find {toxinidir} -name '*.pyc' -delete
    find {toxinidir} -name '__pycache__' -delete
    coverage erase
    rm -Rf {toxinidir}/glfw_cffi.egg-info {toxinidir}/.cache {toxinidir}/.eggs {toxinidir}/.tox {toxinidir}/htmlcov
    rm -Rf {toxinidir}/build {toxinidir}/dist
    rm -Rf {toxinidir}/docs/_build {toxinidir}/docs/coverage {toxinidir}/docs/reports


[testenv:coverage-report]
deps = coverage
skip_install = true
whitelist_externals = *
commands =
    hash -r
    coverage report -m


[testenv:docker]
passenv = *
whitelist_externals = *
sitepackages = False
recreate = False
skip_install = true
changedir = {toxinidir}
commands =
    hash -r
    docker build -t brianbruggeman/glfw-cffi .
    docker push brianbruggeman/glfw-cffi


[testenv:docs]
sitepackages = False
whitelist_externals = *
recreate = True
deps = --editable=file:///{toxinidir}[docs]
commands =
    hash -r
    coverage html --directory={toxinidir}/docs/coverage
    coverage html
    {envpython} setup.py build_sphinx


[testenv:style]
whitelist_externals = *
sitepackages = False
recreate = True
commands =
    py.test -q --flake8 glfw/ --html={toxinidir}/docs/reports/{envname}-report.html {posargs}


[testenv:prepare]
# Prepares for a push or release
passenv = *
whitelist_externals= *
envdir = {env:WORKON_HOME}/tox-device-graph
recreate = False
commands =
    hash -r
    tox -e clean
    tox -e style,py27,pypy
    rm -Rf {toxinidir}/.cache
    tox -e py36
    tox -e coverage-report
    tox -e docs
    open {toxinidir}/docs/_build/html/index.html


[testenv:push]
passenv = *
envdir = {env:WORKON_HOME}/tox-glfw/docs
recreate = False
deps =
    --editable=file:///{toxinidir}[scripts]
    --editable=file:///{toxinidir}
skip_install = true
commands =
    {envpython} {toxinidir}/scripts/check_branch.py -b develop
    python setup.py register -r pypitest
    python setup.py sdist upload -r pypitest


[testenv:release]
passenv = *
envdir = {env:WORKON_HOME}/tox-glfw/docs
recreate = False
deps =
    --editable=file:///{toxinidir}[scripts]
    --editable=file:///{toxinidir}
skip_install = true
commands =
    {envpython} {toxinidir}/scripts/check_branch.py
    python setup.py register -r pypi
    python setup.py sdist upload -r pypi
